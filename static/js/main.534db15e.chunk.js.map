{"version":3,"sources":["components/Input/Input.js","utils/mocks.js","components/Login/Login.js","components/NavBar/NavBar.js","components/SmallCard/SmallCard.js","components/CardList/CardList.js","components/SortBar/SortBar.js","components/BigCard/BigCard.js","components/Modal/Modal.js","components/Main/Main.js","components/PrivateRoute/PrivateRoute.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","id","ref","refelem","type","placeholder","placeHolder","getOTP","login","password","Math","random","toString","substring","Login","email","useRef","history","useHistory","localStorage","getItem","to","text","onClick","e","preventDefault","emailValue","current","value","passwordValue","otpPass","console","log","prompt","setItem","push","alert","NavBar","style","pickedItem","display","onLogout","SmallCard","src","img","author","CardList","result","map","card","index","images","small","artist","SortBar","onChange","handleType","mainType","types","name","handleSubType","mainSubType","subtypes","subtype","BigCard","large","supertype","attacks","damage","convertedEnergyCost","resistances","evolvesFrom","flavorText","Modal","active","setActive","stopPropagation","Main","useState","setResult","setType","setSubtype","page","setPage","setPickedItem","modalActive","setModalActive","useEffect","axios","get","then","data","pageCount","ceil","totalCount","removeItem","window","location","reload","target","cardElement","document","getElementsByClassName","cardElements","Array","from","item","currentTarget","indexOf","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","PrivateRoute","Component","component","rest","isAuthorized","render","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.534db15e.chunk.js","sourcesContent":["import './Input.css';\r\n\r\nfunction Input(props) {\r\n  return (\r\n    <div className=\"inputs\">\r\n      <input\r\n        className=\"input\"\r\n        id={props.id}\r\n        ref={props.refelem}\r\n        type={props.type}\r\n        placeholder={props.placeHolder}></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","const getOTP = (login, password) => {\r\n\r\n    if (login === 'kode@kode.ru' && password === 'Enk0deng') {\r\n        return (\r\n            Math.random()\r\n              .toString(36)\r\n              .substring(2, 15) +\r\n            Math.random()\r\n              .toString(36)\r\n              .substring(2, 15)\r\n          );\r\n    } \r\n    return null;\r\n}\r\n\r\nexport default getOTP;","import { useRef } from 'react';\r\nimport { Redirect, useHistory } from 'react-router';\r\n\r\nimport Input from '../Input/Input';\r\nimport getOTP from '../../utils/mocks';\r\n\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const email = useRef('');\r\n  const password = useRef('');\r\n  const history = useHistory();\r\n  const isLogged = localStorage.getItem('otpPass');\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const emailValue = email.current.value;\r\n    const passwordValue = password.current.value;\r\n    const otpPass = getOTP(emailValue, passwordValue);\r\n    if (!otpPass) {\r\n      alert('Логин и пароль не совпадают.');\r\n      return;\r\n    }\r\n    console.log(otpPass);\r\n    const userPrompt = prompt('Введите пароль из SMS-сообщения');\r\n    if (userPrompt === otpPass) {\r\n      // Симуляция кода введенного в prompt на сервер и возврат результата [успешный/неуспешный];\r\n      localStorage.setItem('otpPass', otpPass);\r\n      history.push('/main');\r\n    } else {\r\n      alert('Вы ввели неправильный пароль! Повторите еще раз.');\r\n    }\r\n  };\r\n\r\n  return isLogged ? (\r\n    <Redirect to=\"/main\" />\r\n  ) : (\r\n    <div className=\"login\">\r\n      <div className=\"login-block\">\r\n        <form>\r\n          <Input\r\n            id=\"mail\"\r\n            refelem={email}\r\n            type=\"mail\"\r\n            text=\"Email\"\r\n            placeHolder={'Введите ваш Email.'}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            refelem={password}\r\n            type=\"password\"\r\n            text=\"Password\"\r\n            placeHolder={'Введите ваш пароль.'}\r\n          />\r\n          <button onClick={handleLogin} type=\"submit\"></button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import './NavBar.css';\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div\r\n        className=\"navbar-back\"\r\n        style={props.pickedItem === '' ? { display: 'none' } : { display: 'block' }}\r\n        id=\"back\"\r\n        onClick={props.onClick}>\r\n        ˂ Back\r\n      </div>\r\n      <div className=\"navbar-text\" onClick={props.onLogout}>\r\n        Logout\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import './SmallCard.css';\r\n\r\nfunction SmallCard(props) {\r\n    return(\r\n        <div className='smallcard' onClick={props.onClick}>\r\n            <div className='smallcard-image'><img src={props.img}></img></div> \r\n            <div className='smallcard-author'>By {props.author}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SmallCard;","import SmallCard from '../SmallCard/SmallCard';\r\n\r\nimport './CardList.css';\r\n\r\nfunction CardList(props) {\r\n    return(\r\n        <div className='cardlist'>\r\n            { (props.result && \r\n                (props.result).map((card, index) =>  (\r\n                    <SmallCard  \r\n                        onClick={props.onClick} \r\n                        img={card.images.small}\r\n                        author={card.artist}\r\n                        key={index}\r\n                         />\r\n                )))\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import { useState } from 'react';\r\n\r\n// import Dropdown from '../Select/Select';\r\nimport types from '../../data/types.json';\r\nimport subtypes from '../../data/subtypes.json';\r\n\r\nimport './SortBar.css';\r\n\r\nfunction SortBar(props) {\r\n  // const [value, setValue] = useState(null);\r\n\r\n  return (\r\n    <div className=\"sortbar-block\">\r\n      <div className=\"sortbar\">\r\n        <select id=\"type\" onChange={props.handleType}>\r\n          <option>{props.mainType}</option>\r\n          {types.map((type) => {\r\n            return <option>{type.name}</option>;\r\n          })}\r\n        </select>\r\n\r\n        {/* <Dropdown // что-то по типу кастомного селектора\r\n          prompt=\"Type\"\r\n          options={types}\r\n          id=\"id\"\r\n          label=\"name\"\r\n          value={value}\r\n          onChange={(val) => setValue(val)}\r\n          handleType={props.handleType}\r\n        /> */}\r\n      </div>\r\n      <div className=\"sortbar\">\r\n        <select id=\"subtype\" onChange={props.handleSubType}>\r\n          <option>{props.mainSubType}</option>\r\n          {subtypes.map((subtype) => {\r\n            return <option>{subtype.name}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortBar;\r\n","import './BigCard.css';\r\n\r\nfunction BigCard(props) {\r\n    return(\r\n        <div>\r\n        { (props.result &&\r\n            <div className='bigcard'>\r\n                <div className='bigcard-image'><img src={props.result.images.large}></img></div>\r\n                <div className='bigcard-info'>\r\n                    <div className='main-info'>\r\n                        <p>Name: {props.result.name}</p>\r\n                        <p>Supertype: {props.result.supertype}</p>\r\n                        <p>Types: {props.result.types}</p>\r\n                        <p>SubTypes: {props.result.subtypes}</p>\r\n                    </div>\r\n                    <div className='hr'></div>\r\n                    <div className='secondary-info'>\r\n                        <p>attackDamage: {props.result.attacks[0].damage}</p>\r\n                        <p>attackCost: {props.result.attacks[0].convertedEnergyCost}</p>\r\n                        <p>resistances: {!props.result.resistances ? 'none': props.result.resistances[0].type}</p>\r\n                        <p>evolvesFrom: {!props.result.evolvesFrom ? 'Evolves from himself?!?!' : props.result.evolvesFrom}</p>\r\n                    </div>\r\n                </div>\r\n                <div className='description'> \r\n                    <p>{!props.result.flavorText ? 'There is nothing I can say about this cutie :)' : props.result.flavorText}</p>\r\n                </div>\r\n            </div>\r\n        ) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BigCard;","import './Modal.css';\r\n\r\nfunction Modal(props, { active, setActive }) {\r\n  return (\r\n    <div className={active ? 'modal active' : 'modal'} onClick={() => setActive(false)}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <img src={props.img}></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport NavBar from '../NavBar/NavBar';\r\nimport CardList from '../CardList/CardList';\r\nimport SortBar from '../SortBar/SortBar';\r\nimport BigCard from '../BigCard/BigCard';\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport './Main.css';\r\n\r\nfunction Main() {\r\n  const [result, setResult] = useState([]);\r\n  const [type, setType] = useState('Type');\r\n  const [subtype, setSubtype] = useState('Subtype');\r\n  const [page, setPage] = useState(1);\r\n  const [pickedItem, setPickedItem] = useState('');\r\n  const [modalActive, setModalActive] = useState(false);\r\n\r\n  const OFFSET_SIZE = 4;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.pokemontcg.io/v2/cards?page=${page}&pageSize=${OFFSET_SIZE}&q=${\r\n          type === 'Type' ? '' : 'types:' + type\r\n        } ${subtype === 'Subtype' ? '' : 'subtypes:' + subtype}`,\r\n      )\r\n      .then((data) => {\r\n        setResult(data.data);\r\n      });\r\n  }, [type, subtype, page]);\r\n  function handleType(e) {\r\n    setType(e.target.value);\r\n  }\r\n\r\n  function handleSubType(e) {\r\n    setSubtype(e.target.value);\r\n  }\r\n\r\n  function handleBigCard(e) {\r\n    e.preventDefault(e);\r\n    const cardElement = document.getElementsByClassName('smallcard');\r\n    let cardElements = Array.from(cardElement);\r\n    let item = e.currentTarget;\r\n    setPickedItem(cardElements.indexOf(item));\r\n  }\r\n\r\n  function handlePreviousPage(e) {\r\n    e.preventDefault();\r\n    setPickedItem('');\r\n  }\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem('otpPass');\r\n    window.location.reload();\r\n  }\r\n\r\n  function changePage({ selected }) {\r\n    setPage(selected + 1);\r\n  }\r\n\r\n  const pageCount = Math.ceil(result.totalCount / OFFSET_SIZE);\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar onClick={handlePreviousPage} onLogout={handleLogout} pickedItem={pickedItem} />\r\n      {pickedItem || pickedItem === 0 ? (\r\n        <BigCard result={result.data[pickedItem]} />\r\n      ) : (\r\n        <div>\r\n          <div className=\"main\">\r\n            <SortBar\r\n              handleType={handleType}\r\n              handleSubType={handleSubType}\r\n              mainType={'Type'}\r\n              mainSubType={'Subtype'}\r\n            />\r\n            <CardList onClick={handleBigCard} result={result.data} />\r\n          </div>\r\n          <div>\r\n            <ReactPaginate\r\n              previousLabel={'Previous'}\r\n              nextLabel={'Next'}\r\n              pageCount={pageCount}\r\n              onPageChange={changePage}\r\n              containerClassName={'paginationBttns'}\r\n              previousLinkClassName={'previousLink'}\r\n              nextLinkClassName={'nextLink'}\r\n              disabledClassName={'paginationDisabled'}\r\n              activeClassName={'paginationActive'}\r\n            />\r\n          </div>\r\n          <div>{<Modal active={modalActive} setActive={setModalActive} />}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { Redirect, Route } from 'react-router-dom';\r\n\r\nfunction PrivateRoute(props) {\r\n    \r\n    const {component: Component, ...rest} = props;\r\n    const isAuthorized = localStorage.getItem('otpPass');\r\n        return (\r\n          <Route\r\n            {...rest}\r\n            render={() =>\r\n              isAuthorized ? (\r\n                <Component {...rest}></Component>\r\n              ) : (\r\n                <Redirect to=\"/\"></Redirect>\r\n              )\r\n            }\r\n          ></Route>\r\n        );\r\n}\r\n\r\nexport default PrivateRoute;","import { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Login from '../Login/Login';\nimport Main from '../Main/Main';\nimport PrivateRoute from '../PrivateRoute/PrivateRoute';\n\nimport './reset.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n          <Route path=\"/main\">\n            <PrivateRoute component={Main} />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}